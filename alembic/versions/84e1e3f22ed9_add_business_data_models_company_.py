"""Add business data models (Company, TargetAccount, TargetPersona, Campaign)

Revision ID: 84e1e3f22ed9
Revises: b1234567890a
Create Date: 2025-07-09 07:20:26.285978

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '84e1e3f22ed9'
down_revision: Union[str, Sequence[str], None] = 'b1234567890a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('url', sa.String(length=500), nullable=False),
    sa.Column('analysis_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('target_accounts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('account_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('target_personas',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('target_account_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('persona_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['target_account_id'], ['target_accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('campaigns',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('target_account_id', sa.UUID(), nullable=False),
    sa.Column('target_persona_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('campaign_type', sa.String(length=50), nullable=False),
    sa.Column('campaign_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['target_account_id'], ['target_accounts.id'], ),
    sa.ForeignKeyConstraint(['target_persona_id'], ['target_personas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('api_usage')
    op.drop_table('api_keys')
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.drop_column('users', 'rate_limit_exempt')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('rate_limit_exempt', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.create_table('api_usage',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('api_key_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('endpoint', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('success', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('response_time_ms', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('error_code', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['api_key_id'], ['api_keys.id'], name=op.f('api_usage_api_key_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('api_usage_pkey'))
    )
    op.create_table('api_keys',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('key_hash', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('key_prefix', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('tier', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('last_used', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('api_keys_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('api_keys_pkey')),
    sa.UniqueConstraint('key_hash', name=op.f('api_keys_key_hash_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.drop_table('campaigns')
    op.drop_table('target_personas')
    op.drop_table('target_accounts')
    op.drop_table('companies')
    # ### end Alembic commands ###
